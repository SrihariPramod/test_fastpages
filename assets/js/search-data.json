{
  
    
        "post0": {
            "title": "Title",
            "content": "from IPython.display import display from IPython.display import HTML import IPython.core.display as di # Example: di.display_html(&#39;&lt;h3&gt;%s:&lt;/h3&gt;&#39; % str, raw=True) # This line will hide code by default when the notebook is exported as HTML di.display_html(&#39;&lt;script&gt;jQuery(function() {if (jQuery(&quot;body.notebook_app&quot;).length == 0) { jQuery(&quot;.input_area&quot;).toggle(); jQuery(&quot;.prompt&quot;).toggle();}});&lt;/script&gt;&#39;, raw=True) . with open(&#39;states_india_1.json&#39;) as response: india = json.load(response) . fig = go.Figure(go.Choroplethmapbox(geojson=india, locations=gdf[&#39;st_nm&#39;], z=gdf[&#39;state_code&#39;],featureidkey=&quot;properties.st_nm&quot;, colorscale=&quot;Viridis&quot;, zmin=0, zmax=25, marker_opacity=0.5, marker_line_width=1)) fig.update_layout(mapbox_style=&quot;carto-positron&quot;, mapbox_zoom=3.5,mapbox_center = {&quot;lat&quot;:23.537876 , &quot;lon&quot;: 78.292142} ) fig.update_layout(margin={&quot;r&quot;:0,&quot;t&quot;:0,&quot;l&quot;:0,&quot;b&quot;:0}) fig.show() . import subprocess def conv_nb_jekyll(filename,front_matter): &quot;&quot;&quot; this function will convert your jupyter notebook to html and prepend the front matter string you provide to the top of the resulting html file Args: filename: filename of input jupyter notebook (.ipynb file) front_matter: python formatted string resembling YAML jekyll front matter Returns: jekyll_html_post: location of final html file to post on your jekyll blog &quot;&quot;&quot; #convert jupyter notebook to html subprocess.call([&quot;jupyter&quot;, &quot;nbconvert&quot;,&quot;--to&quot;,&quot;html&quot;,&quot;--template&quot;,&quot;full&quot;,filename]) #function that will prepend given string to given filename def prepend_string(filename, string): with open(filename, &#39;r+&#39;) as f: content = f.read() f.seek(0, 0) f.write(string.rstrip(&#39; r n&#39;) + &#39; n&#39; + content) #call function to prepend front matter to the file html_file = filename.replace(&#39;.ipynb&#39;,&#39;.html&#39;) prepend_string(html_file,front_matter) #print(&#39;converted html file at: &#39;,html_file) return html_file jekyll_html_post = conv_nb_jekyll(filename=&#39;plotly_map.ipynb&#39;,front_matter=front_matter_str) .",
            "url": "https://sriharipramod.github.io/test_fastpages/2020/07/04/plotly_map.html",
            "relUrl": "/2020/07/04/plotly_map.html",
            "date": " • Jul 4, 2020"
        }
        
    
  
    
  
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://sriharipramod.github.io/test_fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://sriharipramod.github.io/test_fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://sriharipramod.github.io/test_fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}